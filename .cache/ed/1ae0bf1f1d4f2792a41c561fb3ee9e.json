{"id":"index.html","dependencies":[{"name":"./style.css","dynamic":true,"resolved":"E:\\Project\\qianduan-jrg\\demo\\Canvas\\style.css","parent":"E:\\Project\\qianduan-jrg\\demo\\Canvas\\index.html"}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"zh-CN\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>画板</title>\r\n    <link rel=\"stylesheet\" href=\"/da232d78aa810382f2dcdceae308ff8e.css\">\r\n</head>\r\n\r\n<body>\r\n    <canvas id=\"canvas\">\r\n    </canvas>\r\n    <ul class=\"colors\">\r\n        <li id=\"black\"></li>\r\n        <li id=\"red\"></li>\r\n        <li id=\"gray\"></li>\r\n        <li id=\"green\"></li>\r\n        <li id=\"blue\"></li>\r\n        <li id=\"yellow\"></li>\r\n        <li id=\"pink\"></li>\r\n        <li id=\"white\">擦除</li>\r\n    </ul>\r\n    <script>var canvas = document.getElementById(\"canvas\");\ncanvas.width = document.documentElement.clientWidth;\ncanvas.height = document.documentElement.clientHeight;\nvar ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.strokeStyle = 'black';\nvar painting = false;\nvar last;\nctx.lineWidth = 8;\nctx.lineCap = 'round';\non('click', '.colors', 'li', function (e) {\n  var parentChildren = e.target.parentElement.children;\n\n  for (var i = 0; i < parentChildren.length; i++) {\n    if (parentChildren[i] !== e.target) {\n      parentChildren[i].classList.remove(\"selected\");\n    }\n  }\n\n  e.target.classList.add(\"selected\");\n\n  if (e.target.id === \"white\") {\n    ctx.fillStyle = e.target.id;\n    ctx.strokeStyle = e.target.id;\n    ctx.lineWidth = 20;\n    e.target.classList.add(\"selected\");\n    return;\n  }\n\n  ctx.fillStyle = e.target.id;\n  ctx.strokeStyle = e.target.id;\n  ctx.lineWidth = 8;\n});\n\nfunction on(eventType, element, selector, fn) {\n  if (!(element instanceof Element)) {\n    element = document.querySelector(element);\n  }\n\n  element.addEventListener(eventType, function (e) {\n    var el = e.target;\n\n    while (!el.matches(selector)) {\n      if (element === el) {\n        el = null;\n        break;\n      }\n\n      el = el.parentNode;\n    }\n\n    el && fn.call(el, e, el);\n  });\n  return element;\n}\n\nvar isTouchDevice = 'ontouchstart' in document.documentElement;\n\nif (isTouchDevice) {\n  canvas.ontouchstart = function (e) {\n    var x = e.touches[0].clientX;\n    var y = e.touches[0].clientY;\n    last = [x, y];\n  };\n\n  canvas.ontouchmove = function (e) {\n    var x = e.touches[0].clientX;\n    var y = e.touches[0].clientY;\n    drawLine(last[0], last[1], x, y);\n    last = [x, y];\n  };\n} else {\n  canvas.onmousedown = function (e) {\n    painting = true;\n    ctx.beginPath();\n    ctx.arc(e.clientX, e.clientY, 1, 0, 2 * Math.PI);\n    ctx.stroke();\n    ctx.fill();\n    last = [e.clientX, e.clientY];\n  };\n\n  canvas.onmousemove = function (e) {\n    if (painting === true) {\n      drawLine(last[0], last[1], e.clientX, e.clientY);\n      last = [e.clientX, e.clientY];\n    }\n  };\n\n  canvas.onmouseup = function () {\n    painting = false;\n  };\n}\n\nfunction drawLine(x1, y1, x2, y2) {\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.stroke();\n}</script>\r\n</body>\r\n\r\n</html>"},"sourceMaps":null,"error":null,"hash":"e31498a6ab8bbe55b6c546ab81215f30","cacheData":{"env":{}}}